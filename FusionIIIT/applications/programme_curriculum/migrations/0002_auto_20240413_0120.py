# Generated by Django 3.1.5 on 2024-04-13 01:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('globals', '0009_auto_20240413_0120'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('programme_curriculum', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='course',
            name='latest_version',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='course',
            name='version',
            field=models.DecimalField(decimal_places=1, default=1.0, max_digits=5, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.DecimalValidator(decimal_places=1, max_digits=5)]),
        ),
        migrations.AddField(
            model_name='curriculum',
            name='latest_version',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='batch',
            name='year',
            field=models.PositiveIntegerField(default=2024),
        ),
        migrations.AlterField(
            model_name='course',
            name='code',
            field=models.CharField(max_length=10),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='courseslot',
            name='type',
            field=models.CharField(choices=[('Professional Core', 'Professional Core'), ('Professional Elective', 'Professional Elective'), ('Professional Lab', 'Professional Lab'), ('Engineering Science', 'Engineering Science'), ('Natural Science', 'Natural Science'), ('Humanities', 'Humanities'), ('Design', 'Design'), ('Manufacturing', 'Manufacturing'), ('Management Science', 'Management Science'), ('Open Elective', 'Open Elective'), ('Swayam', 'Swayam'), ('Project', 'Project'), ('Optional', 'Optional'), ('Others', 'Others')], max_length=70),
        ),
        migrations.AlterField(
            model_name='curriculum',
            name='version',
            field=models.DecimalField(decimal_places=1, default=1.0, max_digits=5, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.DecimalValidator(decimal_places=1, max_digits=5)]),
        ),
        migrations.AlterField(
            model_name='programme',
            name='programme_begin_year',
            field=models.PositiveIntegerField(default=2024),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('code', 'version')},
        ),
        migrations.CreateModel(
            name='UpdateCourseProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_name', models.CharField(max_length=100)),
                ('faculty_code', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('credit', models.PositiveIntegerField(default=0)),
                ('lecture_hours', models.PositiveIntegerField(null=True)),
                ('tutorial_hours', models.PositiveIntegerField(null=True)),
                ('pratical_hours', models.PositiveIntegerField(null=True)),
                ('discussion_hours', models.PositiveIntegerField(null=True)),
                ('project_hours', models.PositiveIntegerField(null=True)),
                ('pre_requisits', models.TextField(blank=True, null=True)),
                ('syllabus', models.TextField()),
                ('percent_quiz_1', models.PositiveIntegerField(default=10)),
                ('percent_midsem', models.PositiveIntegerField(default=20)),
                ('percent_quiz_2', models.PositiveIntegerField(default=10)),
                ('percent_endsem', models.PositiveIntegerField(default=30)),
                ('percent_project', models.PositiveIntegerField(default=15)),
                ('percent_lab_evaluation', models.PositiveIntegerField(default=10)),
                ('percent_course_attendance', models.PositiveIntegerField(default=5)),
                ('ref_books', models.TextField()),
                ('working_course', models.BooleanField(default=True)),
                ('status', models.PositiveIntegerField(default=0)),
                ('disciplines', models.ManyToManyField(blank=True, to='programme_curriculum.Discipline')),
                ('pre_requisit_courses', models.ManyToManyField(blank=True, to='programme_curriculum.Course')),
            ],
            options={
                'unique_together': {('code', 'faculty_code')},
            },
        ),
        migrations.CreateModel(
            name='Proposal_Tracking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.CharField(max_length=10)),
                ('current_id', models.CharField(max_length=10)),
                ('current_design', models.CharField(max_length=10)),
                ('receive_date', models.DateTimeField(auto_now_add=True)),
                ('forward_date', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('disciplines', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='programme_curriculum.discipline')),
                ('receive_design', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='globals.designation')),
                ('receive_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('file_id', 'current_id', 'receive_id')},
            },
        ),
        migrations.CreateModel(
            name='NewProposalFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploader', models.CharField(max_length=10)),
                ('designation', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('credit', models.PositiveIntegerField(default=3)),
                ('lecture_hours', models.PositiveIntegerField(default=3, null=True)),
                ('tutorial_hours', models.PositiveIntegerField(default=0, null=True)),
                ('pratical_hours', models.PositiveIntegerField(default=0, null=True)),
                ('discussion_hours', models.PositiveIntegerField(default=0, null=True)),
                ('project_hours', models.PositiveIntegerField(default=0, null=True)),
                ('pre_requisits', models.TextField(blank=True, null=True)),
                ('syllabus', models.TextField()),
                ('percent_quiz_1', models.PositiveIntegerField(default=10)),
                ('percent_midsem', models.PositiveIntegerField(default=20)),
                ('percent_quiz_2', models.PositiveIntegerField(default=10)),
                ('percent_endsem', models.PositiveIntegerField(default=30)),
                ('percent_project', models.PositiveIntegerField(default=15)),
                ('percent_lab_evaluation', models.PositiveIntegerField(default=10)),
                ('percent_course_attendance', models.PositiveIntegerField(default=5)),
                ('ref_books', models.TextField()),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('pre_requisit_courses', models.ManyToManyField(blank=True, to='programme_curriculum.Course')),
            ],
            options={
                'unique_together': {('code', 'uploader', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CourseProposal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_name', models.CharField(max_length=100)),
                ('faculty_code', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('credit', models.PositiveIntegerField(default=3)),
                ('lecture_hours', models.PositiveIntegerField(default=3, null=True)),
                ('tutorial_hours', models.PositiveIntegerField(default=0, null=True)),
                ('pratical_hours', models.PositiveIntegerField(default=0, null=True)),
                ('discussion_hours', models.PositiveIntegerField(default=0, null=True)),
                ('project_hours', models.PositiveIntegerField(default=0, null=True)),
                ('pre_requisits', models.TextField(blank=True, null=True)),
                ('syllabus', models.TextField()),
                ('percent_quiz_1', models.PositiveIntegerField(default=10)),
                ('percent_midsem', models.PositiveIntegerField(default=20)),
                ('percent_quiz_2', models.PositiveIntegerField(default=10)),
                ('percent_endsem', models.PositiveIntegerField(default=30)),
                ('percent_project', models.PositiveIntegerField(default=15)),
                ('percent_lab_evaluation', models.PositiveIntegerField(default=10)),
                ('percent_course_attendance', models.PositiveIntegerField(default=5)),
                ('ref_books', models.TextField()),
                ('status', models.PositiveIntegerField(default=0)),
                ('disciplines', models.ManyToManyField(blank=True, to='programme_curriculum.Discipline')),
                ('pre_requisit_courses', models.ManyToManyField(blank=True, to='programme_curriculum.Course')),
            ],
            options={
                'unique_together': {('code', 'faculty_code')},
            },
        ),
    ]
