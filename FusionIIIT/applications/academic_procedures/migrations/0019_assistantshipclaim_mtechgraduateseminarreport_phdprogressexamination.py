# Generated by Django 3.1.5 on 2021-04-22 15:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('globals', '0003_auto_20191024_1242'),
        ('academic_information', '0005_auto_20200522_1851'),
        ('academic_procedures', '0018_courserequested'),
    ]

    operations = [
        migrations.CreateModel(
            name='PhDProgressExamination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=50)),
                ('seminar_date_time', models.DateTimeField()),
                ('place', models.CharField(max_length=30)),
                ('work_done', models.TextField()),
                ('specific_contri_curr_semester', models.TextField()),
                ('future_plan', models.TextField()),
                ('details', models.FileField(upload_to='academic_procedure/Uploaded_document/PhdProgressDetails/')),
                ('papers_published', models.IntegerField()),
                ('presented_papers', models.IntegerField()),
                ('papers_submitted', models.IntegerField()),
                ('quality_of_work', models.CharField(choices=[('Excellent', 'Excellent'), ('Good', 'Good'), ('Satisfactory', 'Satisfactory'), ('Unsatisfactory', 'Unsatisfactory')], max_length=20)),
                ('quantity_of_work', models.CharField(choices=[('Enough', 'Enough'), ('Just Sufficient', 'Just Sufficient'), ('Insufficient', 'Insufficient')], max_length=15)),
                ('Overall_grade', models.CharField(choices=[('A+', 'A+'), ('A', 'A'), ('B+', 'B+'), ('B', 'B'), ('C+', 'C+'), ('C', 'C'), ('D+', 'D'), ('D', 'D'), ('F', 'F')], max_length=2)),
                ('completion_period', models.IntegerField(null=True)),
                ('panel_report', models.TextField(null=True)),
                ('continuation_enhancement_assistantship', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('not applicable', 'not applicable')], max_length=20, null=True)),
                ('enhancement_assistantship', models.CharField(choices=[('yes', 'yes'), ('no', 'no'), ('not applicable', 'not applicable')], max_length=15, null=True)),
                ('annual_progress_seminar', models.CharField(choices=[('Give again', 'Give again'), ('Not Applicable', 'Not Applicable'), ('Approved', 'Approved')], max_length=20, null=True)),
                ('commments', models.TextField(null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.student')),
            ],
        ),
        migrations.CreateModel(
            name='MTechGraduateSeminarReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_of_work', models.TextField()),
                ('date', models.DateField()),
                ('place', models.CharField(max_length=30)),
                ('time', models.TimeField()),
                ('work_done_till_previous_sem', models.TextField()),
                ('specific_contri_in_cur_sem', models.TextField()),
                ('future_plan', models.TextField()),
                ('brief_report', models.FileField(upload_to='academic_procedure/Uploaded_document/GraduateSeminarReport/')),
                ('publication_submitted', models.IntegerField()),
                ('publication_accepted', models.IntegerField()),
                ('paper_presented', models.IntegerField()),
                ('papers_under_review', models.IntegerField()),
                ('quality_of_work', models.CharField(choices=[('Excellent', 'Excellent'), ('Good', 'Good'), ('Satisfactory', 'Satisfactory'), ('Unsatisfactory', 'Unsatisfactory')], max_length=20)),
                ('quantity_of_work', models.CharField(choices=[('Enough', 'Enough'), ('Just Sufficient', 'Just Sufficient'), ('Insufficient', 'Insufficient')], max_length=15)),
                ('Overall_grade', models.CharField(choices=[('A+', 'A+'), ('A', 'A'), ('B+', 'B+'), ('B', 'B'), ('C+', 'C+'), ('C', 'C'), ('D+', 'D'), ('D', 'D'), ('F', 'F')], max_length=2)),
                ('panel_report', models.CharField(choices=[('Give again', 'Give again'), ('Not Applicable', 'Not Applicable'), ('Approved', 'Approved')], max_length=15)),
                ('suggestion', models.TextField(null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.student')),
            ],
        ),
        migrations.CreateModel(
            name='AssistantshipClaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('month', models.CharField(choices=[('Jan', 'January'), ('Feb', 'Febuary'), ('Mar', 'March'), ('Apr', 'April'), ('May', 'May'), ('Jun', 'June'), ('Jul', 'July'), ('Aug', 'August'), ('Sep', 'September'), ('Oct', 'October'), ('Nov', 'November'), ('Dec', 'December')], max_length=10)),
                ('year', models.IntegerField(choices=[(2021, 2021), (2020, 2020)])),
                ('bank_account', models.CharField(max_length=11)),
                ('applicability', models.CharField(choices=[('GATE', 'GATE'), ('NET', 'NET'), ('CEED', 'CEED')], max_length=5)),
                ('ta_supervisor_remark', models.BooleanField(default=False)),
                ('thesis_supervisor_remark', models.BooleanField(default=False)),
                ('hod_approval', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_information.student')),
                ('ta_supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TA_SUPERVISOR', to='globals.faculty')),
                ('thesis_supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='THESIS_SUPERVISOR', to='globals.faculty')),
            ],
        ),
    ]
